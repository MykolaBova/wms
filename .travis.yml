language: java

jdk: openjdk11

services: docker

dist: bionic

addons:
  hosts:
    - mongo1
    - mongo2
    - mongo3
  apt:
    packages:
      - docker-ce

env:
  matrix:
    # 0 - triple replica set and init in compose (no need for adding hosts)
    - MONGODB_MODE=0 IMG_TAG=4.0.10 DOCKER_COMPOSE_VERSION=1.23.2
    # 3 - triple replica set and ext init (needs adding hosts)
    - MONGODB_MODE=3 IMG_TAG=4.0.10 DOCKER_COMPOSE_VERSION=1.23.2
    # 1 - single replica set (needs adding hosts)
    - MONGODB_MODE=1 IMG_TAG=4.0.10
  global:
    - secure: l+S6DwQbFbtWroQWePsGMA+6IKeSIFlZerKFL3+WG7uh9rDYXV/WhJd4VKIrVD3EJsy1ehEBXhi6m/1hacWDnWby27dVV4V/JTtlmCb0SnYLQQ9TezVP+jPtHRuyCLU2gvpliFKBJZ4JpKfNT/BaSafO1ns8HfyeE3+fwTe8KdyFpW9iNNcE71deMTbIdhkcY47VBTTYP0B//hSoAw6gmGWkCasj3Gp3v50xbCcHPxiCmm0sQjjQWIHNEzVH6+WL4mb5jdA46K4DA8rjaZ0AKGOkJxKy11fI8hlen9O1GmzDLNtUEnHpKVzGm2JljHEORyrPqVQpXSEqIT9m418ObmhDZUSsbjR6+0scjY6emJ6ZOnvgU53fPCNnuD+gD+o6Qsu2l/CF+51biYTDy6E7dBF+wENxXTdg3hXj6LhKJTxpjhoeL5A9dBmt/mICa8KzDHKu9e8LQNmseDf6ZanzsQspfcW/ai/XLLZJIzRKpGgCIx+M/5Et5jzNV6qXq2njd8GsJbPqlsdadhulEuD7B60iHn3PMCDnjCaGAuskUrC39PBYCKVWAw0kguYCgo/Tt0ke6dlnyYKuL/S4zXeilCWD6IkvaVCqK6xuc6IgCZY1TVNT/96U7tgoauRNuXpWCdqW8v01x03eTjE1c6BaHOTJlOksUbrz61AD+me5A6c=
    - secure: gtO3DOnq6DkswL7yY+6Jpz8gX0FRjzS5dfwuFc9RFJ+QXV6Q43/UI4O4dO3FsbxEJIR7FlliQ7W/27bxtz3Soa+BnpckouffrC0vof4p8s6Bcf4UBSwIGyeHuISI7BTcy+71RcnZWLOli08COEulSJXzmFS/h9EdmD162a0sNdcsc1C2fcUT1SvNpLEwKc4Li/HwZLGKlmYl/SmP6wgrC022STaLHw63FgZK45AnvQaQ3H6D+JF97Ulyrpm00fiNz25izx45ov4a26/ZedBIh0sZz/cPvj0oVi0RLzXC14EYbG3EdsUavbbI2qI0l1hj173FxwrMzG+gZ6jXcmywSBN3vy85ykP1tkxVmCkbsuPohIT9scP1K6TRUKhZHggcC68U+uPMi79aDfFTs8PZGem3USZrd+Leuhgg5KGYnjyJuOGiSPep9R2FUWVboy2CQicvqcLxD3Rv/hEZS+YfV5hqwsS7oPd7KxqACNApauDjC8gdsCYQ7xtiLvEp9jBdtnyjQaIOXSVMRNK8qQWZI1dSkTzvjasa21DVOJwEarP7gWvCZOshvDwRoh4Ow3azt9AgdNIZpdOKhUB9ejX0P87wO9VXcUr9q+2BtOLkbF1AFnvGTcsr8zDXQIRpCdMmYCZXmLFEleCdkqep3rWJf5YJrAB7iy1kZTG381xd8zk=
    - secure: u0isodbdjtSXAN/S6JQ1mf0cDOdEe7ZvoVOIFej4GHS7M3YqozDbFbV7Jt++PZnN8Lzt3Lu+9GFpQBqyj0WBzAQDwWz5nO9zFG439Wx1ZLMdxGhCI//U6CW1dBVZv9pTchUXwYuFLGB7Jb/OeDErrt4GOxI2U0WFNqmYO0M5UXPnYq0GgHiRPthrNUey6kGVerqqAURwp02zpK5+St5WTqPaBerTI/G+ZEruuYcnKO6o/2UAlfiRpZYJov1EqJ9BGsnFCesZbdAQBY0vrndAEH90vp07vWIWRXS3ALAXvT6m1XkE2Bw20TWldZ3vFr1jfJzzQhwr9OtwqGpfIT/wvgkduI0po9x3gMSaIozotT/DMkpraiZrOBoo1Ueo7iw654XkZCaGaa59zjvYiNtIQUiOx7R2HRI0VLchM2KY/AmHady5CjndwU1Bo7o7xn/tGMli7eKRc9sWdV3Qv71L6ucqu4u098RpOp/oJNXcWJVtls00SE1iABojwFL2gL/i9LDkGv5JCsNC0c1A1zD3pbBVf6sZ1oLgpgp6L801m+iNKxKPnFEogos7a4lEHQ2YsdH+A3KrwVgusG8JlJN99j4u+FKHMNrE+OsaG17eKQYLetzdx2VMfEz9z38hYkL90sxwbAfiECOAf+6vOfR36NWFOzU0BEXpAdZMen3pZJ8=

before_install:
  - chmod +x gradlew;

  - if [ $MONGODB_MODE == 0 ] || [ $MONGODB_MODE == 3 ]; then
    echo "*** update docker-compose to $DOCKER_COMPOSE_VERSION";
    sudo rm /usr/local/bin/docker-compose;
    curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose;
    chmod +x docker-compose;
    sudo mv docker-compose /usr/local/bin;

    echo "$DOCKER_PASSWORD" | docker login -u "s256" --password-stdin;

    chmod +x tools/docker_image_tag_exists.sh;

    if [[ $(./tools/docker_image_tag_exists.sh s256/wms-mongo $IMG_TAG) == "true" ]]; then
    echo "*** found image s256/wms-mongo:$IMG_TAG";
    else
    echo "*** not found image s256/wms-mongo:$IMG_TAG, preparing build and push to Docker Hub...";
    docker build --build-arg MONGO_VERSION=${IMG_TAG} -t s256/wms-mongo:${IMG_TAG} -f Dockerfile.mongo .;
    docker push s256/wms-mongo:${IMG_TAG};
    fi
    fi

  - case "${MONGODB_MODE}" in
    0)
    echo "*** install everything in docker compose";

    if [[ $(./tools/docker_image_tag_exists.sh s256/wms-mongo-ssh-server $IMG_TAG) == "true" ]]; then
    echo "*** found image s256/wms-mongo-ssh-server:$IMG_TAG";
    else
    echo "*** not found image s256/wms-mongo-ssh-server:$IMG_TAG, preparing build and push to Docker Hub...";
    docker build --build-arg MONGO_VERSION=${IMG_TAG} --build-arg SSHPASS=${SSHPASS} -t s256/wms-mongo-ssh-server:${IMG_TAG} -f Dockerfile.mongo-ssh-server .;
    docker push s256/wms-mongo-ssh-server:${IMG_TAG};
    fi

    if [[ $(./tools/docker_image_tag_exists.sh s256/wms-ssh-client $IMG_TAG) == "true" ]]; then
    echo "*** found image s256/wms-ssh-client:$IMG_TAG";
    else
    echo "*** not found image s256/wms-ssh-client:$IMG_TAG, preparing build and push to Docker Hub...";
    docker build -t s256/wms-ssh-client:${IMG_TAG} -f Dockerfile.ssh-client .;
    docker push s256/wms-ssh-client:${IMG_TAG};
    fi
    ;;

    3)
    chmod +x tools/wait-for-mongo.sh;

    echo "*** install 3 node replica set MongoDB";

    docker-compose -f docker-compose.yml up -d;
    ./tools/wait-for-mongo.sh mongo3;
    docker-compose exec mongo1 /bin/sh -c "mongo --port 50001 < /scripts/init.js";
    ;;

    1)
    echo "*** install a single replica set MongoDB";
    docker network create mongo-cluster;
    docker run --name mongo -p 27017:27017 -d --net mongo-cluster mongo:${IMG_TAG} --replSet rs0;
    chmod +x ./tools/wait-for-mongo.sh;
    ./tools/wait-for-mongo.sh mongo;
    docker exec -it mongo mongo --eval "printjson(rs.initiate())";
    ;;
    esac

after_success:
  - if [ $TRAVIS_BRANCH == 'master' ]; then
    echo "*** send stats to codecov";
    bash <(curl -s https://codecov.io/bash);
    fi

script:
  - case "${MONGODB_MODE}" in
    0)
    echo "*** run gradlew without any params, MONGODB_MODE $MONGODB_MODE";
    ./gradlew clean build -x test;
    docker-compose -f docker-compose-init-mongo-rs.yml up -d;
    docker wait run-it;
    docker logs run-it;
    ;;

    1)
    echo "*** run gradlew with a param spring.data.mongodb.uri, MONGODB_MODE $MONGODB_MODE";
    ./gradlew clean build -D"spring.data.mongodb.uri"="mongodb://localhost:27017/test";
    ;;

    3)
    echo "*** run gradlew without any params, MONGODB_MODE $MONGODB_MODE";
    ./gradlew clean build;
    ;;
    esac

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
  - $HOME/.gradle/caches/
  - $HOME/.gradle/wrapper/
  - $HOME/.m2/repository/